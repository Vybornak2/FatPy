[project]
name = "FatPy"
dynamic = ["version"]
description = "Python implementations of various life algorithms"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [{ name = "Jan Vyborny", email = "jan.vyborny2@gmail.com" }]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "matplotlib>=3.10.0",
    "numpy>=2.2.2",
    "pandas>=2.2.3",
    # "scipy>=1.15.1",
]

[project.urls]
"Homepage" = "https://github.com/vybornak2/FatPy"
"Bug Tracker" = "https://github.com/vybornak2/FatPy/issues"
"Documentation" = "https://vybornak2.github.io/FatPy/"
"FABER" = "https://faber-cost.eu/"
"LinkedIn" = "https://www.linkedin.com/company/faber-cost/about/"

[tool.uv]
dev-dependencies = [
    "mypy>=1.15.0",
    "ruff>=0.11.3",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-mypy>=1.0.1",
    "pytest-ruff>=0.4.1",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.15",
    "mkdocstrings[python]>=0.29.1",
    "mkdocs-autorefs>=1.0.0",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    # =====================| Default settings |==================== #
    "-rfE", # show extra test summary info for all tests
    "-vv",  # verbose output
    # "-s", # do not capture output
    "--no-header", # do not show header
    # ===========================| PDB |=========================== #
    # "--pdb", # enter python debugger on failure
    "--pdbcls=IPython.terminal.debugger:TerminalPdb",
    # ==========================| SCOPE |========================== #
    # "-k", "read_op2",
    # "tests/views/", # run view tests
    # "-m", "selected", # run selected tests
    # =========================| Plugins |========================= #
    "--ruff",
    "--mypy",
    # =========================| Logging |========================= #
    "--log-level=DEBUG",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = ["selected: selected tests"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py312"

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "W", # pycodestyle warnings
    "F", # pyflakes
    "D", # pydocstyle
    "B", # bugbear
    "S", # bandit
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]

[tool.mypy]
python_version = "3.12"
files = "src"
strict = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_subclassing_any = true
warn_unreachable = true
warn_unused_configs = true
show_error_context = true
show_column_numbers = true

[build-system]
requires = ["setuptools>=61.0", "setuptools_scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/fatpy/_version.py"
fallback_version = "0.0.1"
